#!/bin/bash
# Set GAMEDIR to the current directory and set logfile
GAMEDIR="$PWD"
LOGFILE="$GAMEDIR/patchlog.txt"
LOGERR="$GAMEDIR/patchlog_error.txt"

# Redirect output and error to the log file
exec > >(tee -a "$LOGFILE") 2>&1
echo "GAMEDIR is set to: $GAMEDIR"

# Exports
export DATADIR="$GAMEDIR/assets"
export DATAFILE="dark_deity.port"
export PATCHZIP="darkdeity-steam.zip"
export LD_LIBRARY_PATH="/usr/lib:$GAMEDIR/lib:$GAMEDIR/tools/libs:$LD_LIBRARY_PATH"
export SDL_GAMECONTROLLERCONFIG="$sdl_controllerconfig"
export TOOLDIR="$GAMEDIR/tools"
export TMPDIR="$GAMEDIR/tmp"
export PATH="$GAMEDIR/tools:$PATH"

# Permissions
chmod 666 /dev/uinput
chmod 777 "$TOOLDIR/gmKtool.py"
chmod 777 "$TOOLDIR/oggenc"

cd "$GAMEDIR"

compress_audio() {

    mkdir -p "$TMPDIR"
    if [ -f "$DATADIR/data.win" ]; then
        mv "$DATADIR/data.win" "$DATADIR/game.droid"
    else
        echo "Missing data.win file!!!"
        mv "$LOGFILE" "$LOGERR"
        exit 1        
    fi
    
    # Run the compression tool
    PYTHON=$(which python3)
    echo "Running GMTools on data and audiogroups."
    $PYTHON $TOOLDIR/gmKtool.py -vv -m 1000 -r -b 64 -d "$TMPDIR" "$DATADIR/game.droid"

    if [ $? -eq 0 ]; then
        echo "Compression completed successfully."
        mv "$TMPDIR/"* "$DATADIR"
        rmdir "$TMPDIR"
        echo "Audio compression applied successfully."
    else
        echo "Audio compression failed."
        rm -rf "$TMPDIR"
        echo "Patching process failed!"
        mv "$LOGFILE" "$LOGERR"
        exit 1
    fi
}

zip_archive() {

        mv $DATADIR/splash.png .
        zip -r -0 $DATAFILE ./assets/
        echo "Zipped contents to $DATAFILE"
        rm -rf ./assets
}

process_game() { 

    mkdir -p saves
    # Text data must be moved to saves directory or game will crash
    [ -d "$DATADIR/Bonds" ] && mv "$DATADIR/Bonds" ./saves/Bonds
    [ -d "$DATADIR/Scenes" ] && mv "$DATADIR/Scenes" ./saves/Scenes
    [ -d "$DATADIR/Stories" ] && mv "$DATADIR/Stories" ./saves/Stories

    echo "Compressing audio..."
    compress_audio
    sleep 1
    echo "Finishing up..."
    zip_archive
    sleep 1
	
    # Final completion message
    echo "Patching process complete!"
}

# Call the function
process_game